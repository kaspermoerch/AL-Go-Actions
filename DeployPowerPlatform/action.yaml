name: DeployPowerPlatformSolution
author: Andersg
inputs:
  shell:
    description: Shell in which you want to run the action (powershell or pwsh)
    required: false
    default: powershell
  actor:
    description: The GitHub actor running the action
    required: false
    default: ${{ github.actor }}
  token:
    description: The GitHub token running the action
    required: false
    default: ${{ github.token }}
  parentTelemetryScopeJson:
    description: Specifies the parent telemetry scope for the telemetry signal
    required: false
    default: '7b7d'
  artifactPath:
    description: Patch to the artifacts folder
    required: false
    default: '.'
  deploySettings: 
    description: The deploy settings
    required: false
    default: '{}'
  authSettings: 
    description: The auth settings
    required: false
    default: '{}'

runs:
  using: composite
  steps:
    - name: Parse DeployToSettings and AuthContext
      uses: microsoft/AL-Go-Actions/ReadPowerPlatformSettings@PPPreview
      with:
        shell: ${{ inputs.shell }}
        parentTelemetryScopeJson: ${{inputs.parentTelemetryScopeJson}}
        deploySettings: ${{ inputs.deploySettings }} 
        authSettings: ${{ inputs.authSettings }}

    - name: Who am I (username)
      if: env.ppUserName != ''
      uses: microsoft/powerplatform-actions/who-am-i@v0
      with:
        environment-url: ${{env.ppEnvironmentUrl}}
        user-name: ${{env.ppUserName}}
        password-secret: ${{env.ppPassword}}

    - name: Who am I (application ID)
      if: env.ppApplicationId != ''
      uses: microsoft/powerplatform-actions/who-am-i@v0
      with:
        environment-url: ${{env.ppEnvironmentUrl}}
        tenant-id: ${{env.ppTenantId}}
        app-id: ${{env.ppApplicationId}}
        client-secret: ${{env.ppClientSecret}}
 
    - name: Find Power Platform solution file
      env:
        _artifactPath: ${{inputs.artifactPath}}
      shell: ${{ inputs.shell }}
      run: |
            $artifactFiles = Get-ChildItem -Path $ENV:_artifactPath -Recurse -File | Select-Object -ExpandProperty FullName
            foreach($filePath in $artifactFiles){
                ## Find file containing Power Platform keyword
                if($filePath.contains("-PowerPlatformSolution-")){
                    Write-Host "Power Platform solution file:"$filePath
                    Add-Content -path $env:GITHUB_ENV -value "powerPlatformSolutionPath=$filePath" 
                    return
                }
            }            
            Write-Warning "Not able to find Power Platform solution file in $ENV:_artifactPath"
            throw "Not able to find Power Platform solution file in $ENV:_artifactPath that contains the artifact keyword '-PowerPlatformSolution-'"
  
    - name: Unpack solution artifact
      uses: microsoft/powerplatform-actions/unpack-solution@v0
      with:
        solution-file: ${{ env.powerPlatformSolutionPath }}
        solution-folder: .artifacts/tempPPSolution/source
        solution-type: "Unmanaged"
        process-canvas-apps: true

    - name: Rebuild solution
      uses: microsoft/AL-Go-Actions/BuildPowerPlatform@PPPreview
      with:
        shell: ${{ inputs.shell }}
        parentTelemetryScopeJson: ${{ inputs.parentTelemetryScopeJson }}
        solutionFolder: .artifacts/tempPPSolution/source
        outputFolder: .artifacts/tempPPSolution
        outputFileName: ppsolution
        companyId: ${{ env.companyId }}
        environmentName: ${{ env.environmentName }}

    - name: Publish solution to Power Platform (userName)
      if: env.ppUserName != ''
      uses: microsoft/powerplatform-actions/import-solution@v0
      with:
        user-name: ${{env.ppUserName}}
        password-secret: ${{env.ppPassword}}
        environment-url: ${{env.ppEnvironmentUrl}}
        solution-file: .artifacts/tempPPSolution/ppsolution.zip
        force-overwrite: true
        publish-changes: true

    - name: Publish solution to Power Platform (ApplicationId)
      if: env.ppApplicationId != ''
      uses: microsoft/powerplatform-actions/import-solution@v0
      with:
        environment-url: ${{env.ppEnvironmentUrl}}
        tenant-id: ${{env.ppTenantId}}
        app-id: ${{env.ppApplicationId}}
        client-secret: ${{env.ppClientSecret}}
        solution-file: .artifacts/tempPPSolution/ppsolution.zip
        force-overwrite: true
        publish-changes: true

branding:
  icon: terminal
  color: blue
